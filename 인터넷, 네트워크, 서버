# 인터넷, 네트워크, 서버

리눅스 서버를 이해하기 위해서는 사전 지식이 필요하다.

### 인터넷 구조

<aside>
💡 **클라이언트의 요청(request)과 서버의 응답(response)**

</aside>

거대한 인터넷 안에는 어떤 것들이 있을까?

가장 쉽게 설명하기 위해 비유를 들겠다.

사실 인턴넷이라는 단어의 의미는 굉장히 추상적이라 쉽게 와닿지 않는다.

가장 간단하게 한 줄로 요약한다면 클라이언트의 요청과 서버의 응답이다.

이게 무슨 말이냐면,

여기서 클라이언트는 내 컴퓨터이고, 서버는 구글이라고 가정해보자.

내가 내 컴퓨터로 웹 브라우저(크롬 등등)를 켜고 [google.com](http://google.com)이라는 주소를 주소창에 치면 google.com 페이지가 딱! 등장한다.

여기서 내가 웹 브라우저에 [google.com](http://google.com)을 치고 엔터를 누르는 순간 요청이 들어간 것이고, google.com 페이지가 딱! 등장하는 것이 응답이 온 것이다.

이게 바로 인터넷이다! 너무 간단하지 않은가?

사실 우리는 거의 매일 적게는 몇 번, 많게는 몇십번 인터넷의 요청과 응답을 마주하고 있었다는 사실.

여기서 알아야 할 포인트가 있다.

바로 Domain name과 ip이다.

Domain name은 우리가 흔히 알고 있는 google.com이나 naver.com

과 같은 사람이 한 눈에 보기 쉽게 해 놓은 주소이고,

ip(internet protocol)는 실제 서버가 인지하는 주소로 192.0.0.2 와 같은 숫자의 조합으로 되어있다.

그러니까,  우리 눈에 보이지 않는 실제 로직은 우리가 조금 전 위에서 설명했던 요청과 응답에서 [google.com](http://google.com) 즉, 도메인 네임을 치는 순간 요청이 들어가고 그 요청이 인터넷 어딘가에 존재하는 DNS(Domain Name Server)에서 내가 검색한 google.com에 해당하는 (실제 서버가 인지하는) ip주소를 찾아서 내 컴퓨터에 주고, 그 ip주소를 내가 받아서 google.com에 요청하는 형태인 것이다. 

나는 단지 google.com을 치고 엔터를 누르기만 했는데 우리 눈에 보이지 않는 많은 로직들이 실제로는 그 짧은 시간동안 이루어지고 있었다는 것.

비유적으로, 내가 한대의 핸드폰이 있고, 친구에게 전화를 걸려고 하는 상황이다.

이 때 키패드 창에 010-1111-2222라는 실제 전화번호를 치는 것이 ip 방식으로 요청하는 것이고, 주소록에 저장되어 있는 친구 이름을 검색해 전화를 거는 방식이 Domain name 방식이다.

나에게 서버로 사용할 컴퓨터가 하나 있다고 가정해보자.

그렇다면 이 서버 컴퓨터는 누군가(클라이언트)의 요청이 들어와야만 일을 하는 형식이지 않은가?

그렇다면, 내 ip를 이용하여 요청을 보낼 수 있도록 내 ip를 클라이언트에게 알려야 한다.

그럼 내 서버 컴퓨터의 ip주소는 어떻게 알아낼 수 있을까?

리눅스 쉘 창에 ip addr 이라는 명령어를 입력하면 ip 주소를 알 수 있다.

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d8ab288a-d14e-4d19-9b4d-a8e515c5a645/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/d8ab288a-d14e-4d19-9b4d-a8e515c5a645/Untitled.png)

노란색 박스 안에 있는 172.21.199.129이 내 ip주소이고, 뒤에 20은 포트번호이다.

포트 번호는 일단 무시하자. 여기서는 몰라도 상관없다.

그리고 또 하나의 ip 주소를 알아내는 방법이 있다.

[이 주소](https://ipinfo.io/what-is-my-ip)에 접속하면 내 컴퓨터의 ip주소를 알아낼 수 도 있다.

![ipinfo.io를 통해 알아낸 내 ip 주소](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/acf10a09-0831-43f7-b8fc-4af985602edd/Untitled.png)

ipinfo.io를 통해 알아낸 내 ip 주소

### shell에서 내 아이피 확인하는 방법

<aside>
💡 1. public address (공인 ip) 확인 방법
: curl ipinfo.io/ip

2. private address (개인 ip) 확인 방법
: ip addr

</aside>

그런데 여기서 의아한 점이 있다.

ip addr을 통해서 알아낸 ip 주소와, ipinfo.io를 통해 알아낸 주소가 애 다른가?!

이 의아함을 해결하기 위해 우리는 또 다른 지식을 알아야 한다.

그건 바로 **공인 ip (Public IP)와 사설 ip (Private IP)**이다.

우리 집에 컴퓨터가 한 대 있다.

이 컴퓨터로 인터넷을 사용하기 위해서는 SK나 KT 등 인터넷을 지원해주는 ISP (Internet Service Provider) 기업에 인터넷을 신청해서 인터넷을 사용할 수 있게 연결해주는 랜선을 설치하고 그 랜선을 컴퓨터에 연결해야 비로소 인터넷을 사용할 수 있다.

이 랜선을 컴퓨터에 연결 함으로써 ip를 할당 받을 수 있는 것이다.

그런데 우리 집에 컴퓨터가 있고, 노트북도 있고 핸드폰도 여러 대 있다고 가정해 보자.

컴퓨터 이외의 노트북과 핸드폰 여러대 역시 인터넷을 사용해야 하는데, 이 모든 기기에 랜선을 탑재한다면 엄청나게 비쌀것이다.

(뭐 돈 많은 분들은 그렇게 사용해도 되겠지만 살면서 이렇게 사용하는 사람은 본적이 없음.)

그래서 이 비용 문제를 해결하기 위해 우리는 라우터(공유기)를 사용한다.

![https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3fc412c2-f605-4158-a7e9-576978a3b2a0/Untitled.png](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3fc412c2-f605-4158-a7e9-576978a3b2a0/Untitled.png)

그림이 조금 난해해 보이겠지만 맨 왼쪽이 ISP이고 가장 오른쪽이 우리집에 있는 컴퓨터나 노트북, 핸드폰이고 중간에 있는 Router가 공유기이다.

비용적인 문제를 해결하기 위해 우리는 ISP에서 랜선 하나를 설치하고 그 랜선을 공유기에 연결한다. 

그런 후 공유기에 여러대의 컴퓨터와 노트북, 핸드폰을 연결하는 것이다.

이렇게 하면 랜선은 하나만 설치하여 비용을 줄일 수 있고 나는 여러대의 장비들을 인터넷을 하며 사용할 수 있는 것이다.

자신의 가정에서 어떻게 사용하고 있는지만 봐도 알 수 있다.

그렇다면 다시 돌아가서, 왜 ip addr로 알아낸 자신의 ip 주소와,

ipinfo.io로 접속해여 알아 낸 내 ip 주소가 다른 것일까?

결론부터 말하자면, ip addr 명령어를 입력하여 ip 주소를 알아내는 방식은 사설 ip를 알아내는 방식이고,

ipinfo.io를 통해 알아내는 방식은 공인 ip를 알아내는 방식이다.

여기서 사설 ip란 장비 그 자체에 대한 ip 주소를 나타내고,

공인 ip는 ISP로부터 설치한 랜선에 의한 ip 주소를 나타낸다.

위의 그림에서 보면 isp로부터 랜선 하나를 설치하면 그에 해당하는 ip 주소가 생기고 비용 절감을 위해 공유기를 설치한 후 공유기와 장비에 직접적으로 연결할 때 역시 ip가 생기는데 랜선과 공유기가 연결된 ip는 공인 ip이고 라우터와 장비간의 연결로 생기는 ip가 사설 ip인 것이다.

장비 그 자체에 할당되는 ip가 사설(개인)ip, ISP와 라우터간에 연결되는 ip가 공인 ip이다.

그렇기 때문에 하나의 공유기에 연결된 여러대의 장비는 각각 자기 자신의 사설 ip를 가지고 있다는 것.

그리고 이 장비들은 하나의 라우터에 연결되어 있다는 가정 하에 서로 소통도 할 수 있다.

우리집에서 하나의 공유기에 연결된 내 핸드폰과 엄마의 노트북이 서로 소통할 수 있다는 것.

그래서 리눅스 서버에서 ip addr 명령어를 통해 알아내면 내 장비 자체에 있는 개인 ip를 알아낼 수 있고, ipinfo.io를 주소창에 입력한 후  알아내는 ip는 직접 내 장비에게 ip가 뭐냐고 물어보는 것이 아닌, dns 서버에 의해 한 번 거쳐서 물어본 내 ip이기 때문에 다른것이고, 이는 공인 ip이다. 

어떤 사람이 어떤 회사에 전화를 하려고 한다고 가정하자.

이 때 회사 안에는 여러 부서가 있다. 

마케팅 부서, 인사 부서, 개발 부서.. 그리고 그 부서는 각각의 내선 전화번호가 있을 것이다.

근대 어떤 사람이 이 회사 안의 개발 부서에 전화를 하고싶다.

하지만 이 회사는 매우 큰 대기업이기 때문에 주소록이 많아 찾아보기 힘들다고 한다면, 회사 입장에서는 이를 방지하기 위해 회사 대표번호를 생성하고 고객에게는 이 대표번호를 노출하는 것이다.

그렇다면 고객은 이 대표번호로 전화를 걸어 그 회사 직원에게 개발 부서와의 연락을 요청하면, 이 회사 직원은 회사 내의 내선 전화를 통해 개발 부서로 연결 해 줄 것이다.

이게 훨씬 효율적이지 않은가?

여기서 대표번호를 공인 ip로, 내선 번호를 사설 ip로 생각하면 이해하기 쉽다.

이로써 인터넷의 기본 구조를 알아봤다.

플러스로 공인 ip와 사설 ip까지 알아봤다.

생활코딩 강의를 듣기 전까지만 해도 인터넷이 굉장히 모호하고 추상적이였는데 이번 기회를 통해 구체화 할 수 있는 시간이였던 것 같다.

개념이 모호해지거나 헷갈리는 부분이 있다면 다시 강의를 돌려보자.

---

출처 :
