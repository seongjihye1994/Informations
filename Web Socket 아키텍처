# Web Socket 아키텍처

## Web Socket 탄생

HTTP는 요청한대로 응답을 보내주기만 하는 단순한 프로토콜이다.

**Hyper Text Transper Protocol 의 약자로 문서 전달에 굉장히 효율적**이다.

하지만, 인터넷이 점점 발전하면서 사람들은 문서 교환 이상의 것을 원하기 시작했다.

채팅이나 게임 등에서 **실시간으로 통신이 필요**하다고 여겼다.

HTTP 는 매 요청과 응답을 수립하고 끊는 과정을 반복해야 했기 때문에

실시간 통신이 필요한 곳에서는 적절하지 못했다.

그래서 생겨난 것이 Web Socket!

HTTP의 문제점을 보완하기 위해서이다.

**HTTP를 사용한 실시간 통신의 문제점을 해결하기 위해 HTML5부터**

**웹소켓이 등장**했다.

**웹소켓은 실시간 양방향 통신**을 지원하고,

**한 번 연결이 수립되면 연결이 지속**되어 클리아인트와 서버 모두 자유롭게 데이터를 보낼 수 있다.

즉, 채팅과 같은 연속적인 통신에 대해 계속 채팅이 이루어질 때 마다 통신을

반복하지 않게 해줘서 통신의 효율성이 높아진다.

## WebSocket 프로토콜

HTTP와 동일하게 OSI 7계층의 어플리케이션 계층에 위치한다.

HTTP와 역시 마찬지로 4계층(전송계층) TCP 에 의존한다.

 

HTTP를 이용할 때 도메인에 ‘http://~’ 를 이용하는 것 처럼,

WS를 이용할 때도 도메인에 ‘ws://~’를 이용한다.

기존 ws 에 보안이 강화된 wss를 사용하기도 한다.

HTTP를 이용해서 연결을 수립하고 연결 된 이후에도

연결할 때 사용했던 포트 80과 443 포트를 이용한다.

연결 수립은 핸드쉐이크를 통해 이루어지고,

핸드쉐이크를 이용할 때 HTTP를 이용한다.

## WebSocket 핸드쉐이크

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6facdb07-87d9-47c2-bb04-6de4a3ceeab2/Untitled.png)

위 그림은 웹소켓 핸드쉐이크와 통신을 보여준다.

이 핸드쉐이크는 한 번의 HTTP 요청과 HTTP 응답으로 이루어진다.

**핸드쉐이크가 끝나면 HTTP 프로토콜을 웹소켓 프로토콜로 변환하여 통신**하는 구조이다.

핸드쉐이크는 먼저 **클라이언트가 HTTP 로 웹 소켓 연결 요청을 하면서 시작**된다.

웹 소켓 연결 요청에는 `“Connection:Upgrade”`와 `“Upgrade:websocket”` 헤더를 통해

**핸드쉐이크 응답을 검증할 키 값**을 보낸다.

- 클라이언트의 웹 소켓 연결 요청 예시
    
    ```json
    GET /chat HTTP/1.1
    Host: server.example.com
    **Upgrade: websocket
    Connection: Upgrade**
    **Sec-WebSocket-Key: x3JJHMbDL1EzLkh9GBhXDw==**
    Sec-WebSocket-Protocol: chat, superchat
    Sec-WebSocket-Version: 13
    Origin: http://example.com
    ```
    

이에 대한 서버 응답 역시 HTTP로 온다.

정상적인 응답 상태 코드는 101(Switching Protocols)이다.

HTTP 에서 핸드쉐이크가 성공하면 WebSocket으로 프로토콜을 변환하기 때문에

Switching Protocol 이다.

“Sec-WebSocket-Key” 헤더를 통해 받은 값에 특정 값을 붙인 후, 

SHA-1로 해싱하고 base64로 인코딩한 값을 “Sec-WebSocket-Accept” 헤더에 보낸다.

이 값을 통해 클라이언트는 정상적인 핸드쉐이크 과정을 검증한다.

클라이언트가 정상적으로 응답을 받으면 핸드쉐이크는 종료되고 

이후부터 웹소켓 프로토콜을 통해 데이터 통신한다.

- 서버 웹소켓 연결 요청에 대한 응답 예시
    
    ```json
    HTTP/1.1 101 Switching Protocols
    Upgrade: websocket
    Connection: Upgrade
    Sec-WebSocket-Accept: HSmrc0sMlYUkAGmm5OPpG2HaGWk=
    Sec-WebSocket-Protocol: chat
    ```
    

이 과정을 통해 핸드쉐이크가 끝나면 웹 소켓 프로토콜을 통해

텍스트를 주고받을 수 있게 된다.

## WebSocket 아키텍쳐

![socket.jpg](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/492e7101-b75f-461e-bacf-e79674e66d71/socket.jpg)

## ref

---

[https://tecoble.techcourse.co.kr/post/2020-09-20-websocket/](https://tecoble.techcourse.co.kr/post/2020-09-20-websocket/)
