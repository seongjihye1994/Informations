# Properties 값 바인딩 시 롬복 @Value 말고 `@ConfigurationProperties` 사용

Properties 설정 파일에서 값을 설정하고, 비즈니스 로직에 가져다 사용하고 싶은 경우

1. ***롬복의 @Value 어노테이션 사용***
2. ***@ConfigurationProperties 어노테이션 사용***

이 두가지 방법이 자주 사용된다.

그런데 롬복의 @Value 어노테이션보다는 

@ConfigurationProperties 을 사용하는것이 좋다고 한다.

이유는, 롬복의 @Value는 RelaxedBinding 이 지원되지 않음.

### RelaxedBinding이 뭐냐?

Relaxed Binding이란 

***프로퍼티 값의 이름이 조금 달라도 유연하게 바인딩을 시켜주는 규칙***을 의미한다.

예를 들어서

프로퍼티 설정 파일에 아래처럼 값이 있다고 하자.

```yaml
what.is.your.name=jihye
```

이 값을 @Value로 사용하려면

```java
@Value("${what.is.your.name}")
private String myName;
```

이렇게 @Value 에 **프로퍼티에 설정한 key 값을 정확하게 입력해야 한다.**

그런데, @ConfigurationProperties 사용하면 프리픽스를 사용해서 값을 가져올 수 있다.

예시로 아래처럼 properties 설정이 되어있다고 가정해보자.

```yaml
### Replication Info ###
db.username=IPG_EMS
db.replicationname=REP_EMS
```

아래처럼 설정 클래스를 생성해서 properties에 있는 값들을 바인딩해서 사용할 수 있다.

```java
package com.ipageon.autoReplication.config;

import lombok.Data;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.stereotype.Component;

@Configuration
@Data
**@ConfigurationProperties(prefix = "db")**
public class SetReplicationInfoProperties {

    private String userName;
    private String replicationName;
}
```

위에서 바인됭 된 값들은 서비스 로직에서 의존성을 주입받아 사용 가능하다.

```java
// 의존성 주입
**private final SetReplicationInfoProperties properties;**

...

// 아래처럼 properties 접근법으로 사용 가능!
log.info("TARGET USER_NAME : {}", **properties.getUserName()**);
log.info("TARGET REPLICATION_NAME : {}", **properties.getReplicationName()**);
```

# ref

---

[https://mangkyu.tistory.com/207](https://mangkyu.tistory.com/207)
